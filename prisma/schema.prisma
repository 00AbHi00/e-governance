// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to your DB provider
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String   
  email     String   @unique
  password  String
  role      Role
  pools     Pool[]
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
  VERIFIED_USER
}

model Pool {
  id          String   @id @default(uuid())
  subCategory String   @default("")
  title       String
  description String?
  creatorId   String
  creator     User     @relation(fields: [creatorId], references: [id])
  status      PoolStatus @default(PENDING)
  questions   Question[] 
  createdAt   DateTime @default(now())
}

enum PoolStatus {
  PENDING
  APPROVED
  REJECTED
}

model Question {
  id          String   @id @default(uuid())
  text        String
  type        QuestionType
  poolId      String
  pool        Pool     @relation(fields: [poolId], references: [id])
  status      QuestionStatus @default(PENDING)
  options     Option[]
}

enum QuestionType {
  SELECT_ONE
  SELECT_MANY
  TEXT
  NUMBER
}

enum QuestionStatus {
  PENDING
  VERIFIED
  REJECTED
}

model Option {
  id         String @id @default(uuid())
  text       String
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
}
